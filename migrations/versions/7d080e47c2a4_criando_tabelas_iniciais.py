"""Criando tabelas iniciais

Revision ID: 7d080e47c2a4
Revises:
Create Date: 2025-03-22 15:16:38.330774

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "7d080e47c2a4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dimlocations",
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.Column(
            "market",
            sa.Enum("DOMESTIC", "INTERNATIONAL", name="marketenum"),
            nullable=False,
        ),
        sa.Column(
            "country", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "province", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column("city", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.PrimaryKeyConstraint("location_id"),
    )
    op.create_table(
        "dimparts",
        sa.Column("part_id", sa.Integer(), nullable=False),
        sa.Column(
            "part_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column("last_id_purchase", sa.Integer(), nullable=False),
        sa.Column("supplier_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("part_id"),
    )
    op.create_index(
        op.f("ix_dimparts_part_name"), "dimparts", ["part_name"], unique=False
    )
    op.create_table(
        "dimvehicle",
        sa.Column("vehicle_id", sa.Integer(), nullable=False),
        sa.Column(
            "model", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column("prod_date", sa.Date(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column(
            "propulsion",
            sa.Enum("GASOLINE", "DIESEL", "ELECTRIC", "HYBRID", name="propulsiontype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("vehicle_id"),
    )
    op.create_index(op.f("ix_dimvehicle_model"), "dimvehicle", ["model"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "dimpurchases",
        sa.Column("purchase_id", sa.Integer(), nullable=False),
        sa.Column(
            "purchase_type",
            sa.Enum("NEW", "USED", "REFURBISHED", name="purchasetypeenum"),
            nullable=False,
        ),
        sa.Column("purchase_date", sa.Date(), nullable=False),
        sa.Column("part_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["part_id"],
            ["dimparts.part_id"],
        ),
        sa.PrimaryKeyConstraint("purchase_id"),
    )
    op.create_table(
        "dimsupplier",
        sa.Column("supplier_id", sa.Integer(), nullable=False),
        sa.Column(
            "supplier_name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["dimlocations.location_id"],
        ),
        sa.PrimaryKeyConstraint("supplier_id"),
    )
    op.create_table(
        "factwarranties",
        sa.Column("claim_key", sa.Integer(), nullable=False),
        sa.Column("vehicle_id", sa.Integer(), nullable=False),
        sa.Column("repair_date", sa.Date(), nullable=False),
        sa.Column(
            "client_complaint",
            sqlmodel.sql.sqltypes.AutoString(length=65535),
            nullable=True,
        ),
        sa.Column(
            "tech_comment",
            sqlmodel.sql.sqltypes.AutoString(length=65535),
            nullable=True,
        ),
        sa.Column("part_id", sa.Integer(), nullable=False),
        sa.Column(
            "classified_issue",
            sqlmodel.sql.sqltypes.AutoString(length=50),
            nullable=True,
        ),
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.Column("purchase_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["dimlocations.location_id"],
        ),
        sa.ForeignKeyConstraint(
            ["part_id"],
            ["dimparts.part_id"],
        ),
        sa.ForeignKeyConstraint(
            ["purchase_id"],
            ["dimpurchases.purchase_id"],
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_id"],
            ["dimvehicle.vehicle_id"],
        ),
        sa.PrimaryKeyConstraint("claim_key"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("factwarranties")
    op.drop_table("dimsupplier")
    op.drop_table("dimpurchases")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_dimvehicle_model"), table_name="dimvehicle")
    op.drop_table("dimvehicle")
    op.drop_index(op.f("ix_dimparts_part_name"), table_name="dimparts")
    op.drop_table("dimparts")
    op.drop_table("dimlocations")
    # ### end Alembic commands ###
